"""
Django settings for koala project.

Generated by 'django-admin startproject' using Django 5.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

import os
from datetime import timedelta

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get('DJANGO_SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
ENV = os.environ.get('ENV', 'local')

ALLOWED_HOSTS = ['*']

CORS_ALLOWED_ORIGINS = (
    'http://localhost',
    'http://localhost:8001',
    'http://localhost:8002',
    'http://localhost:8000',
    'http://localhost:8081',
    'http://localhost:8080',
)

CORS_ALLOWED_ORIGIN_REGEXES = ()

# Application definition
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.postgres',
]

START_APPS = [
    'koala',
    'account',
    # 'listening_profile',
    # 'playlist',
    # 'provider',
    # 'track',
]

INSTALLED_APPS += START_APPS

THIRD_PARTY_APPS = [
    'django_extensions',
    'corsheaders',
    'rest_framework',
    'django_celery_beat',
    'psqlextra',
    'import_export',
]

INSTALLED_APPS += THIRD_PARTY_APPS


SHELL_PLUS_IMPORTS = [
    'from datetime import datetime, date, timedelta',
    'import json',
    'from django.urls import resolve, reverse',
    'from account import debug_tools as kdb',
    'from account.services import LoginEncryptionService, MemberEncryptionService',
]


MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'koala.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'koala.wsgi.application'

DEFAULT_AUTO_FIELD = 'django.db.models.AutoField'

# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        # 'ENGINE': 'django.db.backends.postgresql',
        'ENGINE': 'psqlextra.backend',
        'NAME': os.environ.get('POSTGRES_DB', 'koala'),
        'USER': os.environ.get('POSTGRES_USER', 'koala'),
        'PASSWORD': os.environ.get('POSTGRES_PASSWORD', 'p@ss1234'),
        'HOST': os.environ.get('POSTGRES_HOST', 'koala-db'),
        'PORT': os.environ.get('POSTGRES_PORT', '5432'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

DEFAULT_MEMBER_PASSWORD = os.environ.get('DEFAULT_MEMBER_PASSWORD', 'pass1234')

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': ('account.jwt.JWTAuthentication',),
    'EXCEPTION_HANDLER': 'utils.mixins.custom_exception_handler',
}

SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(days=1),
    'REFRESH_TOKEN_LIFETIME': timedelta(days=7),
    'SIGNING_KEY': os.getenv('JWT_SIGNING_KEY', SECRET_KEY),
}

LOGIN_SECRET_SIGNING_KEY = os.getenv('LOGIN_SECRET_SIGNING_KEY', SECRET_KEY)

GENERIC_SECRET_SIGNING_KEY = os.getenv('GENERIC_SECRET_SIGNING_KEY', SECRET_KEY)

# should add in dove env
MEMBER_API_TOKEN_SECRET_KEY = os.getenv(
    'MEMBER_API_TOKEN_SECRET_KEY', 'NjlsG_iWylZuptss7l5yihbmjYTkxtww98mcXmLcluQ='
)

# django-cryptography field encryption key
DJANGO_CRYPTOGRAPHY_KEY = os.getenv('DJANGO_CRYPTOGRAPHY_KEY', SECRET_KEY)

# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'zh-hant'

TIME_ZONE = 'Asia/Taipei'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field


# Redis
redis_options = {
    'COMPRESSOR': 'django_redis.compressors.zlib.ZlibCompressor',
    'IGNORE_EXCEPTIONS': True,
}

if ENV == 'local':
    REDIS_PROTOCOL = 'redis'
else:
    REDIS_PROTOCOL = 'rediss'
    redis_options['CONNECTION_POOL_KWARGS'] = {'ssl_cert_reqs': None}

REDIS_HOST = os.environ.get('REDIS_HOST', 'koala-redis')
REDIS_PORT = os.environ.get('REDIS_PORT', '6379')
REDIS_DB = os.environ.get('REDIS_DB', '0')
REDIS_CACHE_LOCATION = f'{REDIS_PROTOCOL}://{REDIS_HOST}:{REDIS_PORT}/{REDIS_DB}'


DEFAULT_ALIAS = 'default'

CACHES = {
    DEFAULT_ALIAS: {
        'BACKEND': 'django_redis.cache.RedisCache',
        'LOCATION': REDIS_CACHE_LOCATION,
        'TIMEOUT': 259200,
        'OPTIONS': redis_options,
    },
}

SESSION_ENGINE = 'django.contrib.sessions.backends.cache'
SESSION_CACHE_ALIAS = 'default'


# RabbitMQ
RABBITMQ_HOST = os.environ.get('RABBITMQ_HOST', 'koala-rabbitmq')
RABBITMQ_PORT = os.environ.get('RABBITMQ_PORT', '5672')
RABBITMQ_USER = os.environ.get('RABBITMQ_DEFAULT_USER', 'koala')
RABBITMQ_PASSWORD = os.environ.get('RABBITMQ_DEFAULT_PASS', 'p@ss1234')

CELERY_BROKER_URL = (
    f'amqp://{RABBITMQ_USER}:{RABBITMQ_PASSWORD}@{RABBITMQ_HOST}:{RABBITMQ_PORT}//'
)


CELERY_RESULT_BACKEND = f'{REDIS_PROTOCOL}://{REDIS_HOST}:{REDIS_PORT}/0'
CELERY_BEAT_SCHEDULER = 'django_celery_beat.schedulers:DatabaseScheduler'

# paho mqtt client
MQTT_HOST = os.environ.get('MQTT_HOST', RABBITMQ_HOST)
MQTT_PORT = int(os.environ.get('MQTT_PORT', '1883'))
MQTT_USERNAME = os.environ.get('MQTT_USERNAME', RABBITMQ_USER)
MQTT_PASSWORD = os.environ.get('MQTT_PASSWORD', RABBITMQ_PASSWORD)

MQTT_CONFIG = {
    'HOST': MQTT_HOST,
    'PORT': MQTT_PORT,
    'USERNAME': MQTT_USERNAME,
    'PASSWORD': MQTT_PASSWORD,
    'KEEPALIVE': 60,
    'CLIENT_ID_PREFIX': 'koala',
    'CLEAN_SESSION': True,
    'QOS_LEVEL': 1,
    'RETAIN_MESSAGES': False,
    'AUTO_RECONNECT': True,
    'RECONNECT_DELAY': 5,
    'MAX_RECONNECT_ATTEMPTS': 10,
    'TOPICS': {
        'USER_TELEMETRY': 'bike/+/telemetry',  # 使用者資料
        'FLEET_STATUS': 'bike/+/fleet',  # 車輛管理資料
        'SPORT_METRICS': 'bike/+/sport',  # 到店後運動資料
    },
    'AUTO_SUBSCRIBE_TOPICS': [
        'bike/+/telemetry',
        'bike/+/fleet',
        'bike/+/sport',
    ],
}


IOT_DEFAULT_QUEUE = 'iot_default_q'

# Celery 與 MQTT 整合設定
CELERY_MQTT_CONFIG = {
    'ENABLED': True,
    'TASK_QUEUE': IOT_DEFAULT_QUEUE,
    'ROUTING_KEY': 'mqtt',
    'MAX_RETRIES': 3,
    'RETRY_DELAY': 60,
    'TASK_SERIALIZER': 'json',
    'RESULT_SERIALIZER': 'json',
    'MESSAGE_TYPES': {
        'telemetry': '遙測數據',
        'fleet': '車隊管理',
        'sport': '運動數據',
        'unknown': '未知類型',
    },
}
