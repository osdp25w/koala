# Generated by Django 5.2.2 on 2025-09-20 14:33

import django.contrib.gis.db.models.fields
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ('rental', '0001_initial'),
        ('statistic', '0002_hourlyoverviewstatistics_carbon_reduction_kg_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='GeometryCoordinate',
            fields=[
                (
                    'id',
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                (
                    'latitude',
                    models.DecimalField(
                        decimal_places=7, max_digits=10, verbose_name='緯度'
                    ),
                ),
                (
                    'longitude',
                    models.DecimalField(
                        decimal_places=7, max_digits=10, verbose_name='經度'
                    ),
                ),
                (
                    'usage_count',
                    models.PositiveIntegerField(default=1, verbose_name='使用次數'),
                ),
                (
                    'is_mock',
                    models.BooleanField(default=False, verbose_name='是否為 Mock 座標'),
                ),
                (
                    'point',
                    django.contrib.gis.db.models.fields.PointField(
                        srid=4326, verbose_name='座標點'
                    ),
                ),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-usage_count', '-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='RideSession',
            fields=[
                (
                    'id',
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                (
                    'status',
                    models.CharField(
                        choices=[
                            ('created', 'Created'),
                            ('extracting', 'Extracting'),
                            ('analyzing', 'Analyzing'),
                            ('completed', 'Completed'),
                            ('failed', 'Failed'),
                        ],
                        default='created',
                        max_length=20,
                    ),
                ),
                ('raw_point_count', models.IntegerField(default=0)),
                ('valid_point_count', models.IntegerField(default=0)),
                ('error_message', models.TextField(blank=True, null=True)),
                ('gps_trajectory', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='RouteMatchResult',
            fields=[
                (
                    'id',
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                (
                    'geometry',
                    django.contrib.gis.db.models.fields.LineStringField(
                        srid=4326, verbose_name='匹配後軌跡幾何'
                    ),
                ),
                (
                    'start_point',
                    django.contrib.gis.db.models.fields.PointField(
                        srid=4326, verbose_name='起點座標'
                    ),
                ),
                (
                    'end_point',
                    django.contrib.gis.db.models.fields.PointField(
                        srid=4326, verbose_name='終點座標'
                    ),
                ),
                ('distance_meters', models.FloatField(verbose_name='距離(公尺)')),
                (
                    'average_confidence',
                    models.FloatField(default=1.0, verbose_name='平均信心分數'),
                ),
                (
                    'fallback_strategy',
                    models.JSONField(default=dict, verbose_name='匹配策略記錄'),
                ),
                (
                    'is_sync_geometry_coordinate',
                    models.BooleanField(default=False, verbose_name='是否已同步座標統計'),
                ),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AlterUniqueTogether(
            name='locationstatistics',
            unique_together=None,
        ),
        migrations.RemoveField(
            model_name='locationstatistics',
            name='bike',
        ),
        migrations.RemoveField(
            model_name='locationstatistics',
            name='member',
        ),
        migrations.RemoveIndex(
            model_name='dailyoverviewstatistics',
            name='statistic_d_created_a61896_idx',
        ),
        migrations.RemoveIndex(
            model_name='hourlyoverviewstatistics',
            name='statistic_h_created_e1b085_idx',
        ),
        migrations.AddIndex(
            model_name='geometrycoordinate',
            index=models.Index(
                fields=['latitude', 'longitude'], name='statistic_g_latitud_86e528_idx'
            ),
        ),
        migrations.AddIndex(
            model_name='geometrycoordinate',
            index=models.Index(
                fields=['usage_count'], name='statistic_g_usage_c_72b622_idx'
            ),
        ),
        migrations.AddIndex(
            model_name='geometrycoordinate',
            index=models.Index(
                fields=['is_mock'], name='statistic_g_is_mock_560049_idx'
            ),
        ),
        migrations.AddIndex(
            model_name='geometrycoordinate',
            index=models.Index(
                fields=['created_at'], name='statistic_g_created_8a0802_idx'
            ),
        ),
        migrations.AlterUniqueTogether(
            name='geometrycoordinate',
            unique_together={('latitude', 'longitude', 'is_mock')},
        ),
        migrations.AddField(
            model_name='ridesession',
            name='bike_rental',
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE,
                related_name='ride_session',
                to='rental.bikerental',
            ),
        ),
        migrations.AddField(
            model_name='routematchresult',
            name='ride_session',
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE,
                related_name='match_result',
                to='statistic.ridesession',
            ),
        ),
        migrations.DeleteModel(
            name='LocationStatistics',
        ),
        migrations.AddIndex(
            model_name='ridesession',
            index=models.Index(fields=['status'], name='statistic_r_status_63f905_idx'),
        ),
        migrations.AddIndex(
            model_name='ridesession',
            index=models.Index(
                fields=['bike_rental'], name='statistic_r_bike_re_998bb7_idx'
            ),
        ),
        migrations.AddIndex(
            model_name='routematchresult',
            index=models.Index(
                fields=['ride_session'], name='statistic_r_ride_se_896754_idx'
            ),
        ),
        migrations.AddIndex(
            model_name='routematchresult',
            index=models.Index(
                fields=['average_confidence'], name='statistic_r_average_840fbd_idx'
            ),
        ),
        migrations.AddIndex(
            model_name='routematchresult',
            index=models.Index(
                fields=['distance_meters'], name='statistic_r_distanc_df86a4_idx'
            ),
        ),
        migrations.AddIndex(
            model_name='routematchresult',
            index=models.Index(
                fields=['is_sync_geometry_coordinate'],
                name='statistic_r_is_sync_1cce32_idx',
            ),
        ),
    ]
