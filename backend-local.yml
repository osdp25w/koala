services:
  koala-db:
    image: postgres:14
    restart: on-failure
    env_file:
      - ./env/koala-local.env
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - koala-network
    ports:
      - "5432:5432"

  koala-redis:
    restart: on-failure
    image: redis:7.4.2
    env_file:
      - ./env/koala-local.env
    volumes:
      - redis-data:/data
    networks:
      - koala-network
    ports:
      - "6379:6379"

  koala:
    build: .
    depends_on:
      - koala-db
      - koala-redis
      - koala-rabbitmq
    restart: on-failure
    env_file:
      - ./env/koala-local.env
    working_dir: /usr/src/app
    volumes:
      - ./:/usr/src/app
    networks:
      - koala-network
    ports:
      - "8000:8000"
    # command: >
    #   bash -c "python manage.py migrate &&
    #           python manage.py register_periodic_tasks &&
    #           python manage.py runserver 0.0.0.0:8000"
    command: >
      bash -c "python manage.py migrate &&
              python manage.py runserver 0.0.0.0:8000"
    healthcheck:
      test: ["CMD", "python", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:8000/health/')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  koala-rabbitmq:
    image: rabbitmq:3-management
    restart: on-failure
    env_file:
      - ./env/koala-local.env
    ports:
      - "5672:5672"   # AMQP (Celery)
      - "15672:15672" # Management UI
      - "1883:1883"   # MQTT (development testing)
      - "8883:8883"   # MQTTS (IoT devices)
    networks:
      - koala-network
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
      - ./rabbitmq_local_settings/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf:ro
      - ./rabbitmq_local_settings/enabled_plugins:/etc/rabbitmq/enabled_plugins:ro
      - ./rabbitmq_local_settings/certs:/etc/rabbitmq/certs:ro

  koala-mqtt-client:
    build: .
    depends_on:
      - koala
    restart: on-failure
    env_file:
      - ./env/koala-local.env
    working_dir: /usr/src/app
    volumes:
      - ./:/usr/src/app
    networks:
      - koala-network
    entrypoint: []
    command: ["./entrypoint-mqtt-client.sh"]
    healthcheck:
      test: ["CMD", "pgrep", "-f", "mqtt_client"]
      interval: 60s
      timeout: 15s
      retries: 3
      start_period: 30s

  koala-iot-default-worker:
    build: .
    depends_on:
      - koala-db
      - koala-redis
      - koala-rabbitmq
    restart: on-failure
    env_file:
      - ./env/koala-local.env
    working_dir: /usr/src/app
    volumes:
      - ./:/usr/src/app
    networks:
      - koala-network
    entrypoint: ["/usr/src/app/entrypoint-celery.sh", "iot_default_q"]
    healthcheck:
      test: ["CMD", "celery", "-A", "koala", "status"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

networks:
  koala-network:
    driver: bridge

volumes:
  db_data:
  redis-data:
  rabbitmq-data:
